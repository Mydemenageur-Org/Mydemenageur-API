<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Mydemenageur.API</name>
    </assembly>
    <members>
        <member name="M:Mydemenageur.API.Controllers.AuthenticationController.Login(Mydemenageur.DAL.Models.Users.LoginModel)">
            <summary>
            Login a user to the API
            </summary>
            <remarks>The username can be both the actual username or the user's email</remarks>
            <param name="loginModel"></param>
            <response code="400">The user doesn't exist or the password doesn't match</response>
            <response code="200">Return the logged user with valid token</response>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.AuthenticationController.Register(Mydemenageur.DAL.Models.Users.RegisterModel)">
            <summary>
            Register the new user to the database 
            </summary>
            <param name="registerModel"></param>
            <response code="400">There was one or more errors during registration validation</response>
            <response code="200">Return the newly registrated user's id</response>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.CartonController.GetCartons(System.Boolean,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.CartonController.CreateCarton(Mydemenageur.DAL.Models.Services.CartonModel)" -->
        <member name="M:Mydemenageur.API.Controllers.CartonController.UpdateCartonAnnounce(System.String,Mydemenageur.DAL.Models.Services.CartonModel)">
            <summary>
            To update a carton announce
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.CartonController.DeleteCartonAnnounce(System.String)">
            <summary>
            To delete a carton announce
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.ClientsController.GetClient(System.String)">
            <summary>
            Get a client
            </summary>
            <param name="id"></param>
            <returns></returns>
            <response code="200">The client was get</response>
        </member>
        <member name="M:Mydemenageur.API.Controllers.ClientsController.GetUser(System.String)">
            <summary>
            Get the user corresponding to a client
            </summary>
            <param name="id"></param>
            <returns></returns>
            <response code="404">Their is no user corresponding to the client</response>
            <response code="200">Return the user corresponding to a client</response>
        </member>
        <member name="M:Mydemenageur.API.Controllers.ClientsController.RegisterClient(Mydemenageur.DAL.Models.Clients.ClientRegisterModel)">
            <summary>
            Regsiter a client
            </summary>
            <param name="clientRegisterModel"></param>
            <returns></returns>
            <response code="200">Return the newly created client id</response>
        </member>
        <member name="M:Mydemenageur.API.Controllers.ClientsController.UpdateClient(System.String,Mydemenageur.DAL.Models.Clients.ClientUpdateModel)">
            <summary>
            Update a client. Only admin can edit every clients
            </summary>
            <param name="id" exemple="5f1fe90a58c8ab093c4f772a"></param>
            <param name="clientUpdateModel"></param>
            <returns></returns>
            <response code="400">Their is an error in the request</response>
            <response code="403">You are not allowed to edit this client</response>
            <response code="200">The client has been updated</response>
        </member>
        <member name="M:Mydemenageur.API.Controllers.ClientsController.DeleteClient(System.String)">
            <summary>
            Delete a client. Only admin can delete client
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.DemarcheController.GetAllDemarches(System.Nullable{System.DateTime},System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.DemarcheController.CreateDemarche(Mydemenageur.DAL.Models.Demarche.DemarcheModel)" -->
        <member name="M:Mydemenageur.API.Controllers.DemarcheController.UpdateDemarche(System.String,Mydemenageur.DAL.Models.Demarche.DemarcheModel)">
            <summary>
            To update a demarche announce
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.DemarcheController.DeleteDemarche(System.String)">
            <summary>
            To delete a demarche announce
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.DemenagementIndividuelController.GetDemenagements(System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.DemenagementIndividuelController.CreateDemenagementPro(Mydemenageur.DAL.Models.Services.DemenagementIndivModel)" -->
        <member name="M:Mydemenageur.API.Controllers.DemenagementIndividuelController.UpdateDemenagementIndiv(System.String,Mydemenageur.DAL.Models.Services.DemenagementIndivModel)">
            <summary>
            To update a demenagement announce
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.DemenagementIndividuelController.DeleteDemenagementIndiv(System.String)">
            <summary>
            To delete a demenagement announce
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.DemenagementProController.GetDemenagementsPro(System.Boolean,System.Boolean,System.Boolean,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.DemenagementProController.CreateDemenagementPro(Mydemenageur.DAL.Models.Services.DemenagementProModel)" -->
        <member name="M:Mydemenageur.API.Controllers.DemenagementProController.UpdateDemenagementPro(System.String,Mydemenageur.DAL.Models.Services.DemenagementProModel)">
            <summary>
            To update a demenagement announce
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.DemenagementProController.DeleteDemenagementPro(System.String)">
            <summary>
            To delete a demenagement announce
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.HelpController.GetHelps(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.String,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.HelpController.GetHelpById(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.HelpController.CreateHelp(System.String,System.String,System.String,System.DateTime,System.String,System.String,System.Boolean,System.Boolean,System.DateTime,System.String,System.Boolean,System.Boolean)" -->
        <member name="M:Mydemenageur.API.Controllers.HelpController.UpdateHelpAnnounce(System.String,System.String,System.String,System.String,System.DateTime,System.String,System.String,System.Boolean,System.Boolean,System.DateTime,System.String,System.Boolean,System.Boolean)">
            <summary>
            To update a help announce
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.HelpController.DeleteReview(System.String)">
            <summary>
            To delete a help announce
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.HousingsController.GetHousing(System.String)">
            <summary>
            To get housing with his id
            </summary>
            <param name="id"></param>
            <response code="200">Return the new housing</response>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.HousingsController.RegisterHousing(Mydemenageur.DAL.Models.Housing.HousingRegisterModel)">
            <summary>
            To register new housing
            </summary>
            <param name="toCreate"></param>
            <response code="200">Return the id of new housing</response>
            <response code="400">Return an error if the body has an error</response>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.HousingsController.UpdateHousing(System.String,Mydemenageur.DAL.Models.Housing.HousingUpdateModel)">
            <summary>
            To update a housing
            </summary>
            <param name="id"></param>
            <param name="housingUpdateModel"></param>
            <response code="200">Return ok</response>
            <response code="400">Return bad response housing doesn't exist</response>
            <response code="403">Return bad response you are not authorize to do this</response>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.MenageDomicileController.GetAllMenage(System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.Boolean,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.MenageDomicileController.CreateDemenagementPro(Mydemenageur.DAL.Models.Services.MenageDomicileModel)" -->
        <member name="M:Mydemenageur.API.Controllers.MenageDomicileController.UpdateDemenagementIndiv(System.String,Mydemenageur.DAL.Models.Services.MenageDomicileModel)">
            <summary>
            To update a menagee announce
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.MenageDomicileController.DeleteDemenagementIndiv(System.String)">
            <summary>
            To delete a menage announce
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.MenageLavageAutoController.GetAllMenage(System.String,System.Nullable{System.DateTime},System.String,System.String,System.Boolean,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.MenageLavageAutoController.CreateDemenagementPro(Mydemenageur.DAL.Models.Services.MenageLavageAutoModel)" -->
        <member name="M:Mydemenageur.API.Controllers.MenageLavageAutoController.UpdateDemenagementIndiv(System.String,Mydemenageur.DAL.Models.Services.MenageLavageAutoModel)">
            <summary>
            To update a menagee announce
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.MenageLavageAutoController.DeleteDemenagementIndiv(System.String)">
            <summary>
            To delete a menage announce
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.MenageNettoyageVitreController.GetAllMenage(System.String,System.Nullable{System.DateTime},System.String,System.String,System.Boolean,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.MenageNettoyageVitreController.CreateDemenagementPro(Mydemenageur.DAL.Models.Services.MenageNettoyageVitreModel)" -->
        <member name="M:Mydemenageur.API.Controllers.MenageNettoyageVitreController.UpdateDemenagementIndiv(System.String,Mydemenageur.DAL.Models.Services.MenageNettoyageVitreModel)">
            <summary>
            To update a menagee announce
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.MenageNettoyageVitreController.DeleteDemenagementIndiv(System.String)">
            <summary>
            To delete a menage announce
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.MenageRepassageController.GetAllMenage(System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.Boolean,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.MenageRepassageController.CreateDemenagementPro(Mydemenageur.DAL.Models.Services.MenageRepassageModel)" -->
        <member name="M:Mydemenageur.API.Controllers.MenageRepassageController.UpdateDemenagementIndiv(System.String,Mydemenageur.DAL.Models.Services.MenageRepassageModel)">
            <summary>
            To update a menagee announce
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.MenageRepassageController.DeleteDemenagementIndiv(System.String)">
            <summary>
            To delete a menage announce
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.MoveRequestsController.GetMoveRequest">
            <summary>
            To get all move request
            </summary>
            <returns></returns>
            <response code="200">All move request was get</response>
        </member>
        <member name="M:Mydemenageur.API.Controllers.MoveRequestsController.GetMoveRequest(System.String)">
            <summary>
            To get a specific move request
            </summary>
            <param name="id"></param>
            <returns></returns>
            <response code="200">The move request was get</response>
        </member>
        <member name="M:Mydemenageur.API.Controllers.MoveRequestsController.RegisterMoveRequest(Mydemenageur.DAL.Models.MoveRequest.MoveRequestRegisterModel)">
            <summary>
            To register a new move request
            </summary>
            <param name="toCreate"></param>
            <returns></returns>
            <response code="200">The move request was register</response>
            <response code="400">Bad request</response>
        </member>
        <member name="M:Mydemenageur.API.Controllers.MoveRequestsController.UpdateMoveRequest(System.String,Mydemenageur.DAL.Models.MoveRequest.MoveRequestUpdateModel)">
            <summary>
            To update a move request
            </summary>
            <param name="id"></param>
            <param name="toUpdate"></param>
            <returns></returns>
            <response code="200">The move request is updated</response>
            <response code="403">You are not authorize to update this move request</response>
            <response code="400">Bad request</response>
        </member>
        <member name="M:Mydemenageur.API.Controllers.MoversController.GetMover(System.String)">
            <summary>
            To get a mover with his id
            </summary>
            <param name="id"></param>
            <response code="200">Return the logged mover with valid token</response>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.MoversController.GetUser(System.String)">
            <summary>
            To get user with mover id
            </summary>
            <param name="id"></param>
            <response code="200">Return the user with valid token</response>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.MoversController.RegisterMover(Mydemenageur.DAL.Models.Movers.MoverRegisterModel)">
            <summary>
            To register mover
            </summary>
            <param name="toCreate"></param>
            <response code="200">Return the id of the new Mover</response>
            <response code="400">Return an error if the body is bad</response>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.MoversController.UpdateMover(System.String,Mydemenageur.DAL.Models.Movers.MoverUpdateModel)">
            <summary>
            To update mover
            </summary>
            <param name="id"></param>
            <param name="moverUpdateModel"></param>
            <response code="200">Return ok if the update is good</response>
            <response code="400">Return an error if the Mover doesn't exist</response>
            <response code="403">Return an error if you doesn't have authorization</response>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.MoversController.DeleteMover(System.String)">
            <summary>
            Delete a mover. Only admin can delete mover
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.PastActionsController.GetPastAction(System.String)">
            <summary>
            To get a past action 
            </summary>
            <param name="id"></param>
            <returns></returns>
            <response code="200">Return the past action with this id</response>
        </member>
        <member name="M:Mydemenageur.API.Controllers.PastActionsController.RegisterNewAction(Mydemenageur.DAL.Models.PastAction.PastActionRegisterModel)">
            <summary>
            To register a new action of user
            </summary>
            <param name="toRegister"></param>
            <returns></returns>
            <response code="200">Return the id of the new action</response>
            <response code ="400">They are an error the the request</response>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.ReviewController.GetReviews(System.String,System.String,System.String,System.String,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.ReviewController.GetReviewById(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.ReviewController.CreateReview(System.String,System.String,System.String,System.String)" -->
        <member name="M:Mydemenageur.API.Controllers.ReviewController.UpdateReview(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            To update a review
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.ReviewController.DeleteReview(System.String)">
            <summary>
            To delete a review
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.SocietiesController.GetSociety(System.String)">
            <summary>
            To get society with his id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.SocietiesController.RegisterToDatabase(Mydemenageur.DAL.Models.Society.SocietyRegisterModel)">
            <summary>
            To register a new society
            </summary>
            <param name="societyRegisterModel"></param>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.SocietiesController.UpdateSociety(System.String,Mydemenageur.DAL.Models.Society.SocietyUpdateModel)">
            <summary>
            To update the society
            </summary>
            <param name="id"></param>
            <param name="societyUpdateModel"></param>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.UsersController.GetAllUser">
            <summary>
            Get all user. Only admin can use this
            </summary>
            <param name="id"></param>
            <returns></returns>
            <response code="200">The user's were get</response>
        </member>
        <member name="M:Mydemenageur.API.Controllers.UsersController.GetUser(System.String)">
            <summary>
            Get a user
            </summary>
            <param name="id"></param>
            <returns></returns>
            <response code="200">The user was get</response>
        </member>
        <member name="M:Mydemenageur.API.Controllers.UsersController.GetPastActionFromUser(System.String)">
            <summary>
            To get all action of one user
            </summary>
            <param name="id"></param>
            <returns></returns>
            <response code="200">Return all actions of a user</response>
            <response code="403">Actual user don't have access to this request</response>
        </member>
        <member name="M:Mydemenageur.API.Controllers.UsersController.UpdateUser(System.String,Mydemenageur.DAL.Models.Users.UserUpdateModel)">
            <summary>
            Update a user. Only admin can edit every users
            </summary>
            <param name="id" exemple="5f1fe90a58c8ab093c4f772a"></param>
            <param name="userUpdateModel"></param>
            <returns></returns>
            <response code="400">Their is an error in the request</response>
            <response code="403">You are not allowed to edit this user</response>
            <response code="200">The user has been updated</response>
        </member>
        <member name="M:Mydemenageur.API.Controllers.VehiclesController.GetVehicule(System.String)">
            <summary>
            To get specific vehicule
            </summary>
            <param name="id"></param>
            <returns></returns>
            <response code="200">The vehicule was get</response>
        </member>
        <member name="M:Mydemenageur.API.Controllers.VehiclesController.RegisterVehicule(Mydemenageur.DAL.Models.Vehicule.VehiclesRegisterModel)">
            <summary>
            To register a new vehicule
            </summary>
            <param name="toCreate"></param>
            <returns></returns>
            <response code="200">The vehicule was register</response>
            <response code="400">Bad request</response>
        </member>
        <member name="M:Mydemenageur.API.Controllers.VehiclesController.UpdateVehicule(System.String,Mydemenageur.DAL.Models.Vehicule.VehiclesUpdateModel)">
            <summary>
            To update a vehicule
            </summary>
            <param name="id"></param>
            <param name="vehiculeUpdateModel"></param>
            <returns></returns>
            <response code="200">The vehicule is updated</response>
            <response code="403">You are not authorize to update this vehicule</response>
            <response code="400">Bad request</response>
        </member>
    </members>
</doc>
