<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Mydemenageur.API</name>
    </assembly>
    <members>
        <member name="M:Mydemenageur.API.Controllers.AuthenticationController.Login(Mydemenageur.DAL.Models.Users.LoginModel)">
            <summary>
            Login a user to the API
            </summary>
            <remarks>The username can be both the actual username or the user's email</remarks>
            <param name="loginModel"></param>
            <response code="400">The user doesn't exist or the password doesn't match</response>
            <response code="200">Return the logged user with valid token</response>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.AuthenticationController.Register(Mydemenageur.DAL.Models.Users.RegisterModel)">
            <summary>
            Register the new user to the database 
            </summary>
            <param name="registerModel"></param>
            <response code="400">There was one or more errors during registration validation</response>
            <response code="200">Return the newly registrated user's id</response>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.CartonController.GetCartons(System.Boolean,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.CartonController.CreateCarton(Mydemenageur.DAL.Models.Services.CartonModel)" -->
        <member name="M:Mydemenageur.API.Controllers.CartonController.UpdateCartonAnnounce(System.String,Mydemenageur.DAL.Models.Services.CartonModel)">
            <summary>
            To update a carton announce
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.CartonController.DeleteCartonAnnounce(System.String)">
            <summary>
            To delete a carton announce
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.ClientsController.GetClient(System.String)">
            <summary>
            Get a client
            </summary>
            <param name="id"></param>
            <returns></returns>
            <response code="200">The client was get</response>
        </member>
        <member name="M:Mydemenageur.API.Controllers.ClientsController.GetUser(System.String)">
            <summary>
            Get the user corresponding to a client
            </summary>
            <param name="id"></param>
            <returns></returns>
            <response code="404">Their is no user corresponding to the client</response>
            <response code="200">Return the user corresponding to a client</response>
        </member>
        <member name="M:Mydemenageur.API.Controllers.ClientsController.RegisterClient(Mydemenageur.DAL.Models.Clients.ClientRegisterModel)">
            <summary>
            Regsiter a client
            </summary>
            <param name="clientRegisterModel"></param>
            <returns></returns>
            <response code="200">Return the newly created client id</response>
        </member>
        <member name="M:Mydemenageur.API.Controllers.ClientsController.UpdateClient(System.String,Mydemenageur.DAL.Models.Clients.ClientUpdateModel)">
            <summary>
            Update a client. Only admin can edit every clients
            </summary>
            <param name="id" exemple="5f1fe90a58c8ab093c4f772a"></param>
            <param name="clientUpdateModel"></param>
            <returns></returns>
            <response code="400">Their is an error in the request</response>
            <response code="403">You are not allowed to edit this client</response>
            <response code="200">The client has been updated</response>
        </member>
        <member name="M:Mydemenageur.API.Controllers.ClientsController.DeleteClient(System.String)">
            <summary>
            Delete a client. Only admin can delete client
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.DemarcheController.GetAllDemarches(System.Nullable{System.DateTime},System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.DemarcheController.CreateDemarche(Mydemenageur.DAL.Models.Demarche.DemarcheModel)" -->
        <member name="M:Mydemenageur.API.Controllers.DemarcheController.UpdateDemarche(System.String,Mydemenageur.DAL.Models.Demarche.DemarcheModel)">
            <summary>
            To update a demarche announce
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.DemarcheController.DeleteDemarche(System.String)">
            <summary>
            To delete a demarche announce
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.DemenagementIndividuelController.GetDemenagements(System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.DemenagementIndividuelController.CreateDemenagementPro(Mydemenageur.DAL.Models.Services.DemenagementIndivModel)" -->
        <member name="M:Mydemenageur.API.Controllers.DemenagementIndividuelController.UpdateDemenagementIndiv(System.String,Mydemenageur.DAL.Models.Services.DemenagementIndivModel)">
            <summary>
            To update a demenagement announce
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.DemenagementIndividuelController.DeleteDemenagementIndiv(System.String)">
            <summary>
            To delete a demenagement announce
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.DemenagementProController.GetDemenagementsPro(System.Boolean,System.Boolean,System.Boolean,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.DemenagementProController.CreateDemenagementPro(Mydemenageur.DAL.Models.Services.DemenagementProModel)" -->
        <member name="M:Mydemenageur.API.Controllers.DemenagementProController.UpdateDemenagementPro(System.String,Mydemenageur.DAL.Models.Services.DemenagementProModel)">
            <summary>
            To update a demenagement announce
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.DemenagementProController.DeleteDemenagementPro(System.String)">
            <summary>
            To delete a demenagement announce
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.HelpController.GetHelps(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.String,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.HelpController.GetHelpById(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.HelpController.CreateHelp(System.String,System.String,System.String,System.DateTime,System.String,System.String,System.Boolean,System.Boolean,System.DateTime,System.String,System.Boolean,System.Boolean)" -->
        <member name="M:Mydemenageur.API.Controllers.HelpController.UpdateHelpAnnounce(System.String,System.String,System.String,System.String,System.DateTime,System.String,System.String,System.Boolean,System.Boolean,System.DateTime,System.String,System.Boolean,System.Boolean)">
            <summary>
            To update a help announce
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.HelpController.DeleteReview(System.String)">
            <summary>
            To delete a help announce
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.HousingsController.GetHousing(System.String)">
            <summary>
            To get housing with his id
            </summary>
            <param name="id"></param>
            <response code="200">Return the new housing</response>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.HousingsController.RegisterHousing(Mydemenageur.DAL.Models.Housing.HousingRegisterModel)">
            <summary>
            To register new housing
            </summary>
            <param name="toCreate"></param>
            <response code="200">Return the id of new housing</response>
            <response code="400">Return an error if the body has an error</response>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.HousingsController.UpdateHousing(System.String,Mydemenageur.DAL.Models.Housing.HousingUpdateModel)">
            <summary>
            To update a housing
            </summary>
            <param name="id"></param>
            <param name="housingUpdateModel"></param>
            <response code="200">Return ok</response>
            <response code="400">Return bad response housing doesn't exist</response>
            <response code="403">Return bad response you are not authorize to do this</response>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.MenageDomicileController.GetAllMenage(System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.Boolean,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.MenageDomicileController.CreateDemenagementPro(Mydemenageur.DAL.Models.Services.MenageDomicileModel)" -->
        <member name="M:Mydemenageur.API.Controllers.MenageDomicileController.UpdateDemenagementIndiv(System.String,Mydemenageur.DAL.Models.Services.MenageDomicileModel)">
            <summary>
            To update a menagee announce
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.MenageDomicileController.DeleteDemenagementIndiv(System.String)">
            <summary>
            To delete a menage announce
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.MenageLavageAutoController.GetAllMenage(System.String,System.Nullable{System.DateTime},System.String,System.String,System.Boolean,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.MenageLavageAutoController.CreateDemenagementPro(Mydemenageur.DAL.Models.Services.MenageLavageAutoModel)" -->
        <member name="M:Mydemenageur.API.Controllers.MenageLavageAutoController.UpdateDemenagementIndiv(System.String,Mydemenageur.DAL.Models.Services.MenageLavageAutoModel)">
            <summary>
            To update a menagee announce
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.MenageLavageAutoController.DeleteDemenagementIndiv(System.String)">
            <summary>
            To delete a menage announce
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.MenageNettoyageVitreController.GetAllMenage(System.String,System.Nullable{System.DateTime},System.String,System.String,System.Boolean,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.MenageNettoyageVitreController.CreateDemenagementPro(Mydemenageur.DAL.Models.Services.MenageNettoyageVitreModel)" -->
        <member name="M:Mydemenageur.API.Controllers.MenageNettoyageVitreController.UpdateDemenagementIndiv(System.String,Mydemenageur.DAL.Models.Services.MenageNettoyageVitreModel)">
            <summary>
            To update a menagee announce
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.MenageNettoyageVitreController.DeleteDemenagementIndiv(System.String)">
            <summary>
            To delete a menage announce
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.MenageRepassageController.GetAllMenage(System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.Boolean,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.MenageRepassageController.CreateDemenagementPro(Mydemenageur.DAL.Models.Services.MenageRepassageModel)" -->
        <member name="M:Mydemenageur.API.Controllers.MenageRepassageController.UpdateDemenagementIndiv(System.String,Mydemenageur.DAL.Models.Services.MenageRepassageModel)">
            <summary>
            To update a menagee announce
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.MenageRepassageController.DeleteDemenagementIndiv(System.String)">
            <summary>
            To delete a menage announce
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.MoveRequestsController.GetMoveRequest">
            <summary>
            To get all move request
            </summary>
            <returns></returns>
            <response code="200">All move request was get</response>
        </member>
        <member name="M:Mydemenageur.API.Controllers.MoveRequestsController.GetMoveRequest(System.String)">
            <summary>
            To get a specific move request
            </summary>
            <param name="id"></param>
            <returns></returns>
            <response code="200">The move request was get</response>
        </member>
        <member name="M:Mydemenageur.API.Controllers.MoveRequestsController.RegisterMoveRequest(Mydemenageur.DAL.Models.MoveRequest.MoveRequestRegisterModel)">
            <summary>
            To register a new move request
            </summary>
            <param name="toCreate"></param>
            <returns></returns>
            <response code="200">The move request was register</response>
            <response code="400">Bad request</response>
        </member>
        <member name="M:Mydemenageur.API.Controllers.MoveRequestsController.UpdateMoveRequest(System.String,Mydemenageur.DAL.Models.MoveRequest.MoveRequestUpdateModel)">
            <summary>
            To update a move request
            </summary>
            <param name="id"></param>
            <param name="toUpdate"></param>
            <returns></returns>
            <response code="200">The move request is updated</response>
            <response code="403">You are not authorize to update this move request</response>
            <response code="400">Bad request</response>
        </member>
        <member name="M:Mydemenageur.API.Controllers.MoversController.GetMover(System.String)">
            <summary>
            To get a mover with his id
            </summary>
            <param name="id"></param>
            <response code="200">Return the logged mover with valid token</response>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.MoversController.GetUser(System.String)">
            <summary>
            To get user with mover id
            </summary>
            <param name="id"></param>
            <response code="200">Return the user with valid token</response>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.MoversController.RegisterMover(Mydemenageur.DAL.Models.Movers.MoverRegisterModel)">
            <summary>
            To register mover
            </summary>
            <param name="toCreate"></param>
            <response code="200">Return the id of the new Mover</response>
            <response code="400">Return an error if the body is bad</response>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.MoversController.UpdateMover(System.String,Mydemenageur.DAL.Models.Movers.MoverUpdateModel)">
            <summary>
            To update mover
            </summary>
            <param name="id"></param>
            <param name="moverUpdateModel"></param>
            <response code="200">Return ok if the update is good</response>
            <response code="400">Return an error if the Mover doesn't exist</response>
            <response code="403">Return an error if you doesn't have authorization</response>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.MoversController.DeleteMover(System.String)">
            <summary>
            Delete a mover. Only admin can delete mover
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.PastActionsController.GetPastAction(System.String)">
            <summary>
            To get a past action 
            </summary>
            <param name="id"></param>
            <returns></returns>
            <response code="200">Return the past action with this id</response>
        </member>
        <member name="M:Mydemenageur.API.Controllers.PastActionsController.RegisterNewAction(Mydemenageur.DAL.Models.PastAction.PastActionRegisterModel)">
            <summary>
            To register a new action of user
            </summary>
            <param name="toRegister"></param>
            <returns></returns>
            <response code="200">Return the id of the new action</response>
            <response code ="400">They are an error the the request</response>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.ReviewController.GetReviews(System.String,System.String,System.String,System.String,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.ReviewController.GetReviewById(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:Mydemenageur.API.Controllers.ReviewController.CreateReview(System.String,System.String,System.String,System.String)" -->
        <member name="M:Mydemenageur.API.Controllers.ReviewController.UpdateReview(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            To update a review
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.ReviewController.DeleteReview(System.String)">
            <summary>
            To delete a review
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.SocietiesController.GetSociety(System.String)">
            <summary>
            To get society with his id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.SocietiesController.RegisterToDatabase(Mydemenageur.DAL.Models.Society.SocietyRegisterModel)">
            <summary>
            To register a new society
            </summary>
            <param name="societyRegisterModel"></param>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.SocietiesController.UpdateSociety(System.String,Mydemenageur.DAL.Models.Society.SocietyUpdateModel)">
            <summary>
            To update the society
            </summary>
            <param name="id"></param>
            <param name="societyUpdateModel"></param>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.UsersController.GetAllUser">
            <summary>
            Get all user. Only admin can use this
            </summary>
            <param name="id"></param>
            <returns></returns>
            <response code="200">The user's were get</response>
        </member>
        <member name="M:Mydemenageur.API.Controllers.UsersController.GetUser(System.String)">
            <summary>
            Get a user
            </summary>
            <param name="id"></param>
            <returns></returns>
            <response code="200">The user was get</response>
        </member>
        <member name="M:Mydemenageur.API.Controllers.UsersController.GetPastActionFromUser(System.String)">
            <summary>
            To get all action of one user
            </summary>
            <param name="id"></param>
            <returns></returns>
            <response code="200">Return all actions of a user</response>
            <response code="403">Actual user don't have access to this request</response>
        </member>
        <member name="M:Mydemenageur.API.Controllers.UsersController.UpdateUser(System.String,Mydemenageur.DAL.Models.Users.UserUpdateModel)">
            <summary>
            Update a user. Only admin can edit every users
            </summary>
            <param name="id" exemple="5f1fe90a58c8ab093c4f772a"></param>
            <param name="userUpdateModel"></param>
            <returns></returns>
            <response code="400">Their is an error in the request</response>
            <response code="403">You are not allowed to edit this user</response>
            <response code="200">The user has been updated</response>
        </member>
        <member name="M:Mydemenageur.API.Controllers.VehiclesController.GetVehicule(System.String)">
            <summary>
            To get specific vehicule
            </summary>
            <param name="id"></param>
            <returns></returns>
            <response code="200">The vehicule was get</response>
        </member>
        <member name="M:Mydemenageur.API.Controllers.VehiclesController.RegisterVehicule(Mydemenageur.DAL.Models.Vehicule.VehiclesRegisterModel)">
            <summary>
            To register a new vehicule
            </summary>
            <param name="toCreate"></param>
            <returns></returns>
            <response code="200">The vehicule was register</response>
            <response code="400">Bad request</response>
        </member>
        <member name="M:Mydemenageur.API.Controllers.VehiclesController.UpdateVehicule(System.String,Mydemenageur.DAL.Models.Vehicule.VehiclesUpdateModel)">
            <summary>
            To update a vehicule
            </summary>
            <param name="id"></param>
            <param name="vehiculeUpdateModel"></param>
            <returns></returns>
            <response code="200">The vehicule is updated</response>
            <response code="403">You are not authorize to update this vehicule</response>
            <response code="400">Bad request</response>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Client.UserId">
            <summary>
            The id of the user associated with the client
            </summary>
            <example>6030deb57116e097987bcae5</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Client.Address">
            <summary>
            The user's Address
            </summary>
            <example>36 Rue des Coquelicots</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Client.Town">
            <summary>
            The user's town
            </summary>
            <example>Rennes</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Client.Zipcode">
            <summary>
            The user's zipcode
            </summary>
            <example>85250</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Client.Country">
            <summary>
            The user's country
            </summary>
            <example>France</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Client.Civility">
            <summary>
            The user's civility
            </summary>
            <example>France</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Client.Firstname">
            <summary>
            The user's firstname
            </summary>
            <example>France</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Client.Lastname">
            <summary>
            The user's lastname
            </summary>
            <example>France</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Client.PhoneNumber">
            <summary>
            The user's phoneNumber
            </summary>
            <example>France</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Client.Email">
            <summary>
            The user's email
            </summary>
            <example>France</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Help.UserId">
            <summary>
            The id of the user associated to the help card
            </summary>
            <example>6030deb57116e097987bcae5</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Help.Type">
            <summary>
            The type of provider
            </summary>
            <example>1 or 0</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Help.Title">
            <summary>
            The title help's card
            </summary>
            <example>Déménagement d'un 100 m2 à Bordeaux</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Help.CreatedAt">
            <summary>
            The date when it has been created
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Help.IsFlexible">
            <summary>
            The purpose is to know if the date are flexible
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Help.IsEmergency">
            <summary>
            The purpose is to know if it is an emergency
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Help.PlannifiedDate">
            <summary>
            The plannified date
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Help.Description">
            <summary>
            The description of the help
            </summary>
            <example> Bonjour, je recherche de l'aide pour mon déménagement</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Help.PersonNumber">
            <summary>
            Person number
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Help.TimeNeeded">
            <summary>
            The time needed to finish the work
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Help.FromCity">
            <summary>
            The departure city
            </summary>
            <example> Bordeaux </example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Help.ToCity">
            <summary>
            The final city
            </summary>
            <example> Paris </example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Housing.UserId">
            <summary>
            The id of the user possessing the housing
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Housing.MoveRequestId">
            <summary>
            The id of the move request
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Housing.HousingType">
            <summary>
            The housing type
            </summary>
            <example>House</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Housing.HousingFloor">
            <summary>
            The housing floor
            </summary>
            <example>5</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Housing.IsElevator">
            <summary>
            If the housing have elevator
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Housing.Surface">
            <summary>
            The housing surface
            </summary>
            <example>36</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Housing.Address">
            <summary>
            The housing Address
            </summary>
            <example>36 Rue les coquelicots</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Housing.Town">
            <summary>
            The housing town
            </summary>
            <example>Rennes</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Housing.Zipcode">
            <summary>
            The houisng zipcode
            </summary>
            <example>35000</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Housing.Region">
            <summary>
            The housing region
            </summary>
            <example>Bretagne</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Housing.Country">
            <summary>
            The housing country
            </summary>
            <example>France</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Housing.State">
            <summary>
            If the housing is de start or the end
            </summary>
            <example>Start</example>
            <example>End</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Mover.UserId">
            <summary>
            The id of the user associated with the mover
            </summary>
            <example>6030deb57116e097987bcae5</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Mover.IsVIP">
            <summary>
            The mover's vip status
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Mover.AverageCustomerRating">
            <summary>
            Average customer of the mover's
            </summary>
            <example>8.5</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.MoveRequest.UserId">
            <summary>
            The user id who request the move
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.MoveRequest.Title">
            <summary>
            The move request title
            </summary>
            <example>Déménagement d'une maison 4 pièces</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.MoveRequest.MoveRequestVolume">
            <summary>
            The volume of move request
            </summary>
            <example>25</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.MoveRequest.NeedFurnitures">
            <summary>
            If you need funitures to move
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.MoveRequest.NeedAssembly">
            <summary>
            If you need assembly to move
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.MoveRequest.NeedDiassembly">
            <summary>
            If you need diassembly to move
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.MoveRequest.MinimumRequestDate">
            <summary>
            The minimum move request date
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.MoveRequest.MaximumRequestDate">
            <summary>
            The maximum move request date
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.MoveRequest.HeavyFurnitures">
            <summary>
            If the move request have heavy furnitures
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.MoveRequest.AdditionalInformation">
            <summary>
            All other information for the move request
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.PastAction.ActionIcon">
            <summary>
            The icon of the action 
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.PastAction.Title">
            <summary>
            The title of action
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.PastAction.Description">
            <summary>
            The description of the action
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.PastAction.Date">
            <summary>
            The date of this action
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.PastAction.UserId">
            <summary>
            The user's id 
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Review.UserId">
            <summary>
            The id of the user associated with the review
            </summary>
            <example>6030deb57116e097987bcae5</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Review.Title">
            <summary>
            The title review
            </summary>
            <example>Je recommande ce site !</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Review.CreatedAt">
            <summary>
            The date when it has been created
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Review.Description">
            <summary>
            The description of the review
            </summary>
            <example> Tout seul pour déménager c'était compliqué. Mais grâce aux gros bras, en 2h c'était plié</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Review.Grade">
            <summary>
            The grade of the review
            </summary>
            <example> 5 </example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Service.Label">
            <summary>
            The label of the specified service
            </summary>
            <example>Bricolage à domicile</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Service.Picture">
            <summary>
            The picture of the service
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Society.SocietyName">
            <summary>
            The society name
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Society.EmployeeNumber">
            <summary>
            The employee number
            </summary>
            <example>36</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Society.Address">
            <summary>
            The user's Address
            </summary>
            <example>36 Rue des Coquelicots</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Society.Town">
            <summary>
            The user's town
            </summary>
            <example>Rennes</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Society.Zipcode">
            <summary>
            The user's zipcode
            </summary>
            <example>85250</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Society.Country">
            <summary>
            The user's country
            </summary>
            <example>France</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Society.Region">
            <summary>
            The movers's region 
            </summary>
            <example>Provence-Alpes-Côte d'Azur</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.User.ProfilePicture">
            <summary>
            The user's profile picture id 
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.User.FirstName">
            <summary>
            The user's first name
            </summary>
            <example>Victor</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.User.LastName">
            <summary>
            The user's last name
            </summary>
            <example>DENIS</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.User.Gender">
            <summary>
            The user's gender
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.User.Email">
            <summary>
            The user's email
            </summary>
            <example>admin@feldrise.com</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.User.Phone">
            <summary>
            The user's phone
            </summary>
            <example>+33652809335</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.User.Birthday">
            <summary>
            The user's birthday
            </summary>     
        </member>
        <member name="P:Mydemenageur.DAL.Entities.User.SignupDate">
            <summary>
            The user's signup date
            </summary>     
        </member>
        <member name="P:Mydemenageur.DAL.Entities.User.LastConnection">
            <summary>
            The last connection of the mover
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.User.Username">
            <summary>
            The user's username
            </summary>
            <example>Feldrise</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.User.About">
            <summary>
            The user's about
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.User.Role">
            <summary>
            The user's role. The roles are : Admin, Client, Mover
            </summary>
            <example>Client</example>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.User.Token">
            <summary>
             The user's connection token
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Vehicles.VehiclesNumber">
            <summary>
            Number of vehicle in society
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Vehicles.HasTarpaulinVehicle">
            <summary>
            If the society have tarpaulin vehicle
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Vehicles.PTAC_TarpaulinVehicle">
            <summary>
            PTAC of tarpaulin ptac
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Vehicles.HasHardWallVehicle">
            <summary>
            If the society have hard wall vehicle
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Vehicles.PTAC_HardWallVehicle">
            <summary>
            PTAC of hard wall ptac
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Vehicles.CanTransportHorse">
            <summary>
            If he can transport horse
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Vehicles.CanTransportVehicle">
            <summary>
            If he can transport vehicle
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Entities.Vehicles.TotalCapacity">
            <summary>
            Total capacity of all vehicle in the society
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Clients.ClientRegisterModel.UserId">
            <summary>
            The id of the user associated with the client
            </summary>
            <example>6030deb57116e097987bcae5</example>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Demands.HelpModel.Title">
            <summary>
            The title help's card
            </summary>
            <example>Déménagement d'un 100 m2 à Bordeaux</example>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Demands.HelpModel.CreatedAt">
            <summary>
            The date when it has been created
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Demands.HelpModel.isFlexible">
            <summary>
            The purpose is to know if the date are flexible
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Demands.HelpModel.isEmergency">
            <summary>
            The purpose is to know if it is an emergency
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Demands.HelpModel.PlannifiedDate">
            <summary>
            The plannified date
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Demands.HelpModel.Description">
            <summary>
            The description of the help
            </summary>
            <example> Bonjour, je recherche de l'aide pour mon déménagement</example>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Demands.HelpModel.PersonNumber">
            <summary>
            Person number
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Demands.HelpModel.TimeNeeded">
            <summary>
            The time needed to finish the work
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Demands.HelpModel.FirstName">
            <summary>
            The firstname of the author
            </summary>
            <example> Léo </example>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Demands.HelpModel.LastName">
            <summary>
            The lastname of the author
            </summary>
            <example> Delpon </example>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Demands.HelpModel.FromCity">
            <summary>
            The departure city
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Demands.HelpModel.ToCity">
            <summary>
            The final city
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Demands.HelpModel.Type">
            <summary>
            The type of provider
            </summary>
            <example>1 or 0</example>
        </member>
        <member name="P:Mydemenageur.DAL.Models.MoveRequest.MoveRequestRegisterModel.AdditionalInformation">
            <summary>
            All other information for the move request
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Models.MoveRequest.MoveRequestUpdateModel.AdditionalInformation">
            <summary>
            All other information for the move request
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Models.PastAction.PastActionRegisterModel.ActionIcon">
            <summary>
            The icon of the action 
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Models.PastAction.PastActionRegisterModel.Title">
            <summary>
            The title of action
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Models.PastAction.PastActionRegisterModel.Description">
            <summary>
            The description of the action
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Models.PastAction.PastActionRegisterModel.Date">
            <summary>
            The date of this action
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Models.PastAction.PastActionRegisterModel.UserId">
            <summary>
            The user's id 
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Reviews.ReviewModel.Title">
            <summary>
            The title review
            </summary>
            <example>Je recommande ce site !</example>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Reviews.ReviewModel.CreatedAt">
            <summary>
            The date when it has been created
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Reviews.ReviewModel.Description">
            <summary>
            The description of the review
            </summary>
            <example> Tout seul pour déménager c'était compliqué. Mais grâce aux gros bras, en 2h c'était plié</example>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Reviews.ReviewModel.Grade">
            <summary>
            The grade of the review
            </summary>
            <example> 5 </example>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Reviews.ReviewModel.FirstName">
            <summary>
            The firstname of the author
            </summary>
            <example> Léo </example>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Reviews.ReviewModel.LastName">
            <summary>
            The lastname of the author
            </summary>
            <example> Delpon </example>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Society.SocietyRegisterModel.SocietyName">
            <summary>
            The society name
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Society.SocietyRegisterModel.EmployeeNumber">
            <summary>
            The employee number
            </summary>
            <example>36</example>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Society.SocietyRegisterModel.Address">
            <summary>
            The user's Address
            </summary>
            <example>36 Rue des Coquelicots</example>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Society.SocietyRegisterModel.Town">
            <summary>
            The user's town
            </summary>
            <example>Rennes</example>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Society.SocietyRegisterModel.Zipcode">
            <summary>
            The user's zipcode
            </summary>
            <example>85250</example>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Society.SocietyRegisterModel.Country">
            <summary>
            The user's country
            </summary>
            <example>France</example>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Society.SocietyRegisterModel.Region">
            <summary>
            The movers's region 
            </summary>
            <example>Provence-Alpes-Côte d'Azur</example>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Users.LoginModel.Email">
            <summary>
            The user's username or the user's
            email
            </summary>
            <example>admin@feldrise.com</example>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Users.LoginModel.Password">
            <summary>
            The user's password
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Users.RegisterModel.ProfilePicture">
            <summary>
            The user's profile picture id 
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Users.RegisterModel.FirstName">
            <summary>
            The user's first name
            </summary>
            <example>Victor</example>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Users.RegisterModel.LastName">
            <summary>
            The user's last name
            </summary>
            <example>DENIS</example>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Users.RegisterModel.Gender">
            <summary>
            The user's gender
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Users.RegisterModel.Email">
            <summary>
            The user's email
            </summary>
            <example>admin@feldrise.com</example>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Users.RegisterModel.Phone">
            <summary>
            The user's phone
            </summary>
            <example>+33652809335</example>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Users.RegisterModel.Birthday">
            <summary>
            The user's birthday
            </summary>     
        </member>
        <member name="P:Mydemenageur.DAL.Models.Users.RegisterModel.Username">
            <summary>
            The user's username
            </summary>
            <example>Feldrise</example>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Users.RegisterModel.About">
            <summary>
            The user's about
            </summary>
            <example>Hello it's me</example>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Users.UserUpdateModel.ProfilePicture">
            <summary>
            The user's profile picture id 
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Users.UserUpdateModel.FirstName">
            <summary>
            The user's first name
            </summary>
            <example>Victor</example>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Users.UserUpdateModel.LastName">
            <summary>
            The user's last name
            </summary>
            <example>DENIS</example>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Users.UserUpdateModel.Email">
            <summary>
            The user's email
            </summary>
            <example>admin@feldrise.com</example>
            
        </member>
        <member name="P:Mydemenageur.DAL.Models.Users.UserUpdateModel.Phone">
            <summary>
            The user's phone
            </summary>
            <example>+33652809335</example>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Users.UserUpdateModel.Username">
            <summary>
            The user's username
            </summary>
            <example>Feldrise</example>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Users.UserUpdateModel.About">
            <summary>
            The user's about
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Users.UserUpdateModel.Password">
            <summary>
            The user's password
            </summary>
            <example>MySecurePassword</example>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Vehicule.VehiclesRegisterModel.VehiclesNumber">
            <summary>
            Number of vehicule in society
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Vehicule.VehiclesRegisterModel.HasTarpaulinVehicule">
            <summary>
            If the society have tarpaulin vehicule
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Vehicule.VehiclesRegisterModel.PTAC_TarpaulinVehicule">
            <summary>
            PTAC of tarpaulin ptac
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Vehicule.VehiclesRegisterModel.HasHardWallVehicule">
            <summary>
            If the society have hard wall vehicule
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Vehicule.VehiclesRegisterModel.PTAC_HardWallVehicule">
            <summary>
            PTAC of hard wall ptac
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Vehicule.VehiclesRegisterModel.CanTransportHorse">
            <summary>
            If he can transport horse
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Vehicule.VehiclesRegisterModel.CanTransportVehicule">
            <summary>
            If he can transport vehicule
            </summary>
        </member>
        <member name="P:Mydemenageur.DAL.Models.Vehicule.VehiclesRegisterModel.TotalCapacity">
            <summary>
            Total capacity of all vehicule in the society
            </summary>
        </member>
    </members>
</doc>
