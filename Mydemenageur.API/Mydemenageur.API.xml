<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Mydemenageur.API</name>
    </assembly>
    <members>
        <member name="M:Mydemenageur.API.Controllers.AuthenticationController.Login(Mydemenageur.DAL.Models.Users.LoginModel)">
            <summary>
            Login a user to the API
            </summary>
            <remarks>The username can be both the actual username or the user's email</remarks>
            <param name="loginModel"></param>
            <response code="400">The user doesn't exist or the password doesn't match</response>
            <response code="200">Return the logged user with valid token</response>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.AuthenticationController.Register(Mydemenageur.DAL.Models.Users.RegisterModel)">
            <summary>
            Register the new user to the database 
            </summary>
            <param name="registerModel"></param>
            <response code="400">There was one or more errors during registration validation</response>
            <response code="200">Return the newly registrated user's id</response>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.AuthenticationController.TokenizeFirebaseUser(Mydemenageur.DAL.Models.Users.FirebaseUserModel)">
            <summary>
            Register the new user to the database 
            </summary>
            <param name="createOrConnectUserModel"></param>
            <response code="400">There was one or more errors during registration validation</response>
            <response code="200">Return the newly registrated user's id</response>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.AuthenticationController.UpdatePassword(System.String,Mydemenageur.DAL.Models.Users.UpdatePassword)">
            <summary>
            Update user's password
            </summary>
            <param name="id"></param>
            <param name="password"></param>
            <response code="400">There was one or more errors during the password's udpate process</response>
            <response code="200">Return the id of the user that changed his password</response>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.AuthenticationController.Logout(System.String)">
            <summary>
            Disconnect the user
            </summary>
            <param name="id"></param>
            <response code="400">There was one or more errors during the disconnection process</response>
            <response code="200">Return the id of the user that got disconnected</response>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.DemandController.GetDemand(System.String)">
            <summary>
            Get a demand by ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.DemandController.GetDemands">
            <summary>
            Get all demands
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.DemandController.GetDemandsFromRecipient(System.String)">
            <summary>
            Get all demands from the recipient
            </summary>
            <param name="recipientId"></param>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.DemandController.GetDemandsFromSender(System.String)">
            <summary>
            Get all demands from the sender
            </summary>
            <param name="senderId"></param>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.DemandController.CreateDemand(Mydemenageur.DAL.Models.Demands.DemandCreation)">
            <summary>
            GCreate a new demand
            </summary>
            <param name="demandCreated"></param>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.DemandController.UpdateDemand(System.String,Mydemenageur.DAL.Models.Demands.DemandCreation)">
            <summary>
            Update a demand
            </summary>
            <param name="id"></param>
            <param name="demandToUpdate"></param>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.GenericServicesController.GetGenericService(System.String,System.String)">
            <summary>
            Get a service by ID
            </summary>
            <param name="id"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.GenericServicesController.GetGenericServices(System.Int32,System.Int32)">
            <summary>
            Get all generic services. Can be filtered by name
            </summary>
            <param name="pageNumber"></param>
            <param name="numberOfElementsPerPage"></param>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.GenericServicesController.GetGenericServicesCount">
            <summary>
            Get the number of generic services, Can be filtered by name
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.GenericServicesController.GetBaseGenericService(System.String)">
            <summary>
            Get a service by name
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.GenericServicesController.CreateGenericService(Mydemenageur.DAL.Models.GenericService.GenericService)">
            <summary>
            Create a generic service
            </summary>
            <param name="toCreate"></param>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.GrosBrasController.GetGrosBras(System.Int32,System.Int32)">
            <summary>
            Get all grosBras 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.GrosBrasController.GetGrosBrasById(System.String)">
            <summary>
            Get a specific gros bras profil by it's id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.GrosBrasController.GetGrosBrasCount">
            <summary>
            Get all grosBras 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.ReviewsController.GetReview(System.String)">
            <summary>
            Get a review by ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.ReviewsController.GetReviews">
            <summary>
            Get all reviews
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.ReviewsController.GetReviews(System.String)">
            <summary>
            Get all reviews from a user
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.ReviewsController.CreateReview(Mydemenageur.DAL.Models.Reviews.Review)">
            <summary>
            Create a new review
            </summary>
            <param name="demandCreated"></param>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.ReviewsController.UpdateReview(System.String,Mydemenageur.DAL.Models.Reviews.Review)">
            <summary>
            Update a review
            </summary>
            <param name="id"></param>
            <param name="reviewToUpdate"></param>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.UsersController.GetUsers">
            <summary>
            Get all users 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.UsersController.GetUser(System.String)">
            <summary>
            Get a specific user by it's id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.UsersController.GetProfilePicture(System.String)">
            <summary>
            Get a user's profile picture
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Mydemenageur.API.Controllers.UsersController.UpdateUser(System.String,Mydemenageur.DAL.Models.Users.UserUpdateModel)">
            <summary>
            Update a user
            </summary>
            <param name="id"></param>
            <param name="toUpdate"></param>
            <returns></returns>
        </member>
    </members>
</doc>
